@using Domain.Infrastructure.DataAccess.EntityFramework.UnitOfWork.PagedList
@using Domain.Entity.ComplexType

@model IPagedList<BlogContentComplexType>
@{ 
    bool isEditable = false;
    if (TempData["EditBlogContent"] != null)
    {
        isEditable = true;
    }
}

@if(Model.Items.Count == 0)
{
    <div><strong> <span class="fa fa-info-circle"></span> Bu kategoride yayınlanan kayıt bulunmamaktadır. </strong> </div>
}

@{
    for (int i = 0; i < Model.Items.Count; i++)
    {
        string imgSrc = Url.Content("~/App_Themes/images/blog.jpg");

        if(Model.Items[i].PostImage != null)
        {
            var base64 = Convert.ToBase64String(Model.Items[i].PostImage);
            imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
        }

        <div class="blog_post">
            <div class="blog_postcontent">
                <div class="image_frame small"><a href="@Url.Action("Read", "Blog", new { area="", id=Model.Items[i].BlogContentId })"><img src="@imgSrc" /></a></div>
                <div class="post_info_content_small">

                    <a class="date"> <strong> @Model.Items[i].PostDate.Day </strong> <i> @Model.Items[i].PostDate.ToString("MMM", CultureInfo.CurrentCulture) </i> </a>

                    <h3><a href="@Url.Action("Read", "Blog", new { area="", id=Model.Items[i].BlogContentId })"> @Model.Items[i].Title </a></h3>

                    <ul class="post_meta_links_small">
                        <li class="post_by"><a> Admin </a></li>
                        <li class="post_categoty"><a href=""> @Model.Items[i].CategoryName </a></li>
                    </ul>

                    <div class="clearfix"></div>

                    <div class="short-content"> @Html.Raw(Model.Items[i].ShortContent) </div>

                    @if(isEditable)
                    {
                <div class="mb-4">
                    <a class="btn btn-primary" href="@Url.Action("Update", "Blog", new { area="Admin", id=Model.Items[i].BlogContentId })"> <i class="fa fa-edit"></i> Düzenle </a>
                    <a class="btn btn-danger ml-2" href="@Url.Action("Delete", "Blog", new { area="Admin", id=Model.Items[i].BlogContentId })"> <i class="fa fa-trash"></i> Sil </a>
                </div>
                    }

                </div>
            </div>
        </div>

        <div class="clearfix divider_line3"></div>
    }
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" data-page="@(Model.PageIndex - 1)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>

        @{
            if (Model.TotalPages > 5)
            {
                if (Model.PageIndex > 2)
                {
                    int maxPage = Model.PageIndex + 2;
                    if (maxPage >= Model.TotalPages)
                    {
                        maxPage = Model.TotalPages - 1;
                    }

                    for (int i = Model.PageIndex - 2; i <= maxPage; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")"><a class="page-link" data-page="@i">@(i + 1)</a></li>
                    }
                }
                else
                {
                    for (int i = 0; i < 5; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")"><a class="page-link" data-page="@i">@(i + 1)</a></li>
                    }
                }
            }
            else
            {
                if (Model.PageIndex > 3)
                {
                    for (int i = Model.PageIndex - 2; i < Model.TotalPages - 1; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")"><a class="page-link" data-page="@i">@(i + 1)</a></li>
                    }
                }
                else
                {
                    for (int i = 0; i < Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")"><a class="page-link" data-page="@i">@(i + 1)</a></li>
                    }
                }
            }
        }

        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" data-page="@(Model.PageIndex + 1)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>
